/** webpack.plugins.js */
module.exports = (env) => {
  return {
    plugins: [
      new (require("duplicate-package-checker-webpack-plugin"))({
        // Also show module that is requiring each duplicate package (default: false)
        verbose: env.production,
        // Emit errors instead of warnings (default: false)
        emitError: env.production,
        // Show help message if duplicate packages are found (default: true)
        showHelp: !env.production,
        // Warn also if major versions differ (default: true)
        strict: env.production,
        //  /**
        // * Exclude instances of packages from the results.
        // * If all instances of a package are excluded, or all instances except one,
        // * then the package is no longer considered duplicated and won't be emitted as a warning/error.
        // * @param {Object} instance
        // * @param {string} instance.name The name of the package
        // * @param {string} instance.version The version of the package
        // * @param {string} instance.path Absolute path to the package
        // * @param {?string} instance.issuer Absolute path to the module that requested the package
        // * @returns {boolean} true to exclude the instance, false otherwise
        // */
        // exclude(instance) {
        //     return instance.name === "fbjs";
        // }
      }),
      new (require("circular-dependency-plugin"))({
        // excludes index and ejs as false positives were being flagged
        exclude: /a\.js|node_modules|.scss|.ejs|index.js/,
        include: /src/,
        failOnError: env.production,
        // e.g. via import(/* webpackMode: "weak" */ './file.js')
        allowAsyncCycles: false,
        // set the current working directory for displaying module paths
        cwd: process.cwd(),
        // // `onStart` is called before the cycle detection starts
        // onStart({ compilation }) {
        //     console.log('start detecting webpack modules cycles');
        // },
        // // `onDetected` is called for each module that is cyclical
        // onDetected({ module: webpackModuleRecord, paths, compilation }) {
        //     // `paths` will be an Array of the relative module paths that make up the cycle
        //     // `module` will be the module record generated by webpack that caused the cycle
        //     compilation.errors.push(new Error(paths.join(' -> ')))
        // },
        // // `onEnd` is called before the cycle detection ends
        // onEnd({ compilation }) {
        //     console.log('end detecting webpack modules cycles');
        // },
      }),
      /*
			new (require('flow-webpack-plugin'))({ CURRENTLY BREAKS :: NEEDS TO BE UPDATED TO WEBPACK 4+ TODO UPDATE: 2020 recheck
					failOnError: false,
					failOnErrorWatch: false,
					reportingSeverity: 'warning',
					printFlowOutput: false,
					flowPath: require.main.require('flow-bin'),
					flowArgs: ['--color=always', '--include-warnings'],
					verbose: false,
					callback: (...args) => {

							return true;
					}
			})
			 */
    ],
  };
};
